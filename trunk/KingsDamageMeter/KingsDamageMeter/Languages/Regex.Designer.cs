//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KingsDamageMeter.Languages {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class Regex : global::System.Configuration.ApplicationSettingsBase {
        
        private static Regex defaultInstance = ((Regex)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Regex())));
        
        public static Regex Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\\[charname:")]
        public string Chat {
            get {
                return ((string)(this["Chat"]));
            }
            set {
                this["Chat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You inflicted (?<damage>[^a-zA-Z]+) damage on (?<target>.+)\\.")]
        public string YouInflictedRegex {
            get {
                return ((string)(this["YouInflictedRegex"]));
            }
            set {
                this["YouInflictedRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You inflicted (?<damage>[^a-zA-Z]+) damage( and the rune carve effect)? on (?<tar" +
            "get>.+) by using (?<skill>.+)\\.")]
        public string YouInflictedSkillRegex {
            get {
                return ((string)(this["YouInflictedSkillRegex"]));
            }
            set {
                this["YouInflictedSkillRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Critical Hit! You inflicted (?<damage>[^a-zA-Z]+) critical damage on (?<target>.+" +
            ")\\.")]
        public string YouCriticalRegex {
            get {
                return ((string)(this["YouCriticalRegex"]));
            }
            set {
                this["YouCriticalRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<target>.+) received (?<damage>[^a-zA-Z]+)( poisoning)? damage after you used (" +
            "?<effect>.+)\\.")]
        public string YouEffectDamageRegex {
            get {
                return ((string)(this["YouEffectDamageRegex"]));
            }
            set {
                this["YouEffectDamageRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) inflicted (?<damage>[^a-zA-Z]+) damage on (?<target>.+)\\.")]
        public string OtherInflictedRegex {
            get {
                return ((string)(this["OtherInflictedRegex"]));
            }
            set {
                this["OtherInflictedRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) inflicted (?<damage>[^a-zA-Z]+) damage on (?<target>.+)( and caused t" +
            "he pattern engraving effect)? by using (?<skill>.+)\\.")]
        public string OtherInflictedSkillRegex {
            get {
                return ((string)(this["OtherInflictedSkillRegex"]));
            }
            set {
                this["OtherInflictedSkillRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You received (?<damage>[^a-zA-Z]+) damage from (?<target>.+)\\.")]
        public string YouReceivedRegex {
            get {
                return ((string)(this["YouReceivedRegex"]));
            }
            set {
                this["YouReceivedRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) received (?<damage>[^a-zA-Z]+) damage from (?<target>.+)\\.")]
        public string OtherReceivedRegex {
            get {
                return ((string)(this["OtherReceivedRegex"]));
            }
            set {
                this["OtherReceivedRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) received (?<damage>[^a-zA-Z]+) damage due to the effect of (?<skill>." +
            "+)\\.")]
        public string OtherReceivedSkillRegex {
            get {
                return ((string)(this["OtherReceivedSkillRegex"]));
            }
            set {
                this["OtherReceivedSkillRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You inflicted continuous damage on (?<target>.+) by using (?<skill>.+)\\.")]
        public string YouContinuousRegex {
            get {
                return ((string)(this["YouContinuousRegex"]));
            }
            set {
                this["YouContinuousRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) used (?<skill>.+) to inflict the continuous damage effect on (?<targe" +
            "t>.+)\\.")]
        public string OtherContinuousRegex {
            get {
                return ((string)(this["OtherContinuousRegex"]));
            }
            set {
                this["OtherContinuousRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You summoned (?<pet>.+) by using (?<skill>.+)\\.")]
        public string YouSummonedRegex {
            get {
                return ((string)(this["YouSummonedRegex"]));
            }
            set {
                this["YouSummonedRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You summoned (?<pet>.+) by using (?<skill>.+) to let it attack (?<target>.+)\\.")]
        public string YouSummonedAttackRegex {
            get {
                return ((string)(this["YouSummonedAttackRegex"]));
            }
            set {
                this["YouSummonedAttackRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) summoned (?<pet>.+) by using (?<skill>.+)\\.")]
        public string OtherSummonedRegex {
            get {
                return ((string)(this["OtherSummonedRegex"]));
            }
            set {
                this["OtherSummonedRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) has summoned (?<pet>.+) to attack (?<target>.+) by using (?<skill>.+)" +
            "\\.")]
        public string OtherSummonedAttackRegex {
            get {
                return ((string)(this["OtherSummonedAttackRegex"]));
            }
            set {
                this["OtherSummonedAttackRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<time>[^a-zA-Z]+) : ")]
        public string TimestampRegex {
            get {
                return ((string)(this["TimestampRegex"]));
            }
            set {
                this["TimestampRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) has joined your group\\.")]
        public string JoinedGroupRegex {
            get {
                return ((string)(this["JoinedGroupRegex"]));
            }
            set {
                this["JoinedGroupRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) has left your group\\.")]
        public string LeftGroupRegex {
            get {
                return ((string)(this["LeftGroupRegex"]));
            }
            set {
                this["LeftGroupRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You have gained (?<exp>[^a-zA-Z]+) EXP from (?<target>.+)\\.")]
        public string YouGainedExpRegex {
            get {
                return ((string)(this["YouGainedExpRegex"]));
            }
            set {
                this["YouGainedExpRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You have earned (?<kinah>[^a-zA-Z]+) Kinah\\.")]
        public string YouEarnedKinahRegex {
            get {
                return ((string)(this["YouEarnedKinahRegex"]));
            }
            set {
                this["YouEarnedKinahRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<target>.+) is bleeding because You used (?<skill>.+)\\.")]
        public string YouInflictedBleedRegex {
            get {
                return ((string)(this["YouInflictedBleedRegex"]));
            }
            set {
                this["YouInflictedBleedRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<target>.+) is bleeding because (?<name>.+) used (?<skill>.+)\\.")]
        public string OtherInflictedBleedRegex {
            get {
                return ((string)(this["OtherInflictedBleedRegex"]));
            }
            set {
                this["OtherInflictedBleedRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) received (?<damage>[^a-zA-Z]+) bleeding damage after you used (?<skil" +
            "l>.+)\\.")]
        public string OtherReceivedBleedRegex {
            get {
                return ((string)(this["OtherReceivedBleedRegex"]));
            }
            set {
                this["OtherReceivedBleedRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You received the effect by using (?<effect>.+)\\.")]
        public string YouGainedEffectRegex {
            get {
                return ((string)(this["YouGainedEffectRegex"]));
            }
            set {
                this["YouGainedEffectRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(" Effect")]
        public string Effect {
            get {
                return ((string)(this["Effect"]));
            }
            set {
                this["Effect"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(?<name>.+) has been kicked out of your group\\.")]
        public string KickedFromGroupRegex {
            get {
                return ((string)(this["KickedFromGroupRegex"]));
            }
            set {
                this["KickedFromGroupRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You spent (?<kinah>[^a-zA-Z]+) Kinah\\.")]
        public string YouSpentKinahRegex {
            get {
                return ((string)(this["YouSpentKinahRegex"]));
            }
            set {
                this["YouSpentKinahRegex"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("You have gained (?<ap>[^a-zA-Z]+) Abyss Points\\.")]
        public string YouGainedApRegex {
            get {
                return ((string)(this["YouGainedApRegex"]));
            }
            set {
                this["YouGainedApRegex"] = value;
            }
        }
    }
}
